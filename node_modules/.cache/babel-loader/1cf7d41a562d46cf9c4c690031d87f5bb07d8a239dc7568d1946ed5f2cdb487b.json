{"ast":null,"code":"var _jsxFileName = \"E:\\\\document\\\\reactjs\\\\delete-multiple\\\\src\\\\ExampleFunctional.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExampleFunctional = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [action, setAction] = useState('');\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    //Trong trường hợp dependencies rỗng useEffect(() => {})\n    //Luôn chạy 1 lần duy nhất khi component được mounted\n    //nếu biến trong state thay đổi thì component sẽ được re-render và useEffect sẽ được chạy lại\n\n    //[] chỉ chạy đúng một lần \n    //state trong component có thay đối cũng không chạy vào hàm useEffect này\n    //dù cho ta có setCount trong trường hợp [] này thì nó cũng sẽ chỉ chạy duy nhất 1 lần khi màn hình được render\n\n    //Trong trường hợp có dependencies useEffect(() => {},[count])\n    //sẽ chạy lần đầu khi màn hình được render và sẽ chỉ chạy nếu biến count thay đổi\n\n    document.title = `You clicked ${count} times`;\n    console.log('useEffect');\n    setTimeout(() => {\n      setCount(100);\n      setLoading(false);\n      loadData();\n    }, 3000);\n    return () => {\n      console.log('useEffect - count - cleanup');\n    };\n  }, []);\n  const loadData = async () => {\n    const response = await axios.get(\"https://fakestoreapi.com/users\");\n    setUsers(response.data);\n  };\n  const ascData = () => {\n    setLoading(true);\n    setTimeout(() => {\n      const strAscending = [...users].sort((a, b) => a.name.firstname > b.name.firstname ? 1 : -1);\n      setLoading(false);\n      setUsers(strAscending);\n    }, 3000);\n  };\n  const desData = () => {\n    const strDescending = [...users].sort((a, b) => a.name.firstname > b.name.firstname ? -1 : 1);\n    setUsers(strDescending);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAction('users'),\n      children: \"Get Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAction('comments'),\n      children: \"Get Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: desData,\n      children: \"DESCENDING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ascData,\n      children: \"ASCENDING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), loading === false && users && users.map((user, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [user.id, \" - \", user.name.firstname, \" \", user.name.lastname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this);\n    }), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(ExampleFunctional, \"KAdCZwuHikYLwFFigZwa40F+lCU=\");\n_c = ExampleFunctional;\nexport default ExampleFunctional;\nvar _c;\n$RefreshReg$(_c, \"ExampleFunctional\");","map":{"version":3,"names":["React","useState","useEffect","axios","ExampleFunctional","count","setCount","action","setAction","users","setUsers","loading","setLoading","document","title","console","log","setTimeout","loadData","response","get","data","ascData","strAscending","sort","a","b","name","firstname","desData","strDescending","map","user","id","lastname"],"sources":["E:/document/reactjs/delete-multiple/src/ExampleFunctional.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ExampleFunctional = () => {\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [action, setAction] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        //Trong trường hợp dependencies rỗng useEffect(() => {})\r\n        //Luôn chạy 1 lần duy nhất khi component được mounted\r\n        //nếu biến trong state thay đổi thì component sẽ được re-render và useEffect sẽ được chạy lại\r\n\r\n        //[] chỉ chạy đúng một lần \r\n        //state trong component có thay đối cũng không chạy vào hàm useEffect này\r\n        //dù cho ta có setCount trong trường hợp [] này thì nó cũng sẽ chỉ chạy duy nhất 1 lần khi màn hình được render\r\n\r\n        //Trong trường hợp có dependencies useEffect(() => {},[count])\r\n        //sẽ chạy lần đầu khi màn hình được render và sẽ chỉ chạy nếu biến count thay đổi\r\n\r\n\r\n        document.title = `You clicked ${count} times`\r\n        console.log('useEffect');\r\n\r\n        setTimeout(() => {\r\n            setCount(100);\r\n            setLoading(false);\r\n            loadData();\r\n        }, 3000)\r\n\r\n        return () => {\r\n            console.log('useEffect - count - cleanup');\r\n        }\r\n    }, [])\r\n\r\n    const loadData = async () => {\r\n        const response = await axios.get(\"https://fakestoreapi.com/users\");\r\n        setUsers(response.data);\r\n    }\r\n\r\n    const ascData = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const strAscending = [...users].sort((a, b) =>\r\n                a.name.firstname > b.name.firstname ? 1 : -1,\r\n            );\r\n            setLoading(false);\r\n            setUsers(strAscending);\r\n        }, 3000)\r\n    }\r\n\r\n    const desData = () => {\r\n        const strDescending = [...users].sort((a, b) =>\r\n            a.name.firstname > b.name.firstname ? -1 : 1,\r\n        );\r\n        setUsers(strDescending);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>You clicked {count} times</p>\r\n            <button onClick={() => setCount(count + 1)}>Click me</button>\r\n            <button onClick={() => setAction('users')}>Get Users</button>\r\n            <button onClick={() => setAction('comments')}>Get Comments</button>\r\n            <button onClick={desData}>DESCENDING</button>\r\n            <button onClick={ascData}>ASCENDING</button>\r\n            {\r\n                loading === false && users && users.map((user, id) => {\r\n                    return (\r\n                        <div>{user.id} - {user.name.firstname} {user.name.lastname}</div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                loading && <div>Loading ...</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExampleFunctional;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}