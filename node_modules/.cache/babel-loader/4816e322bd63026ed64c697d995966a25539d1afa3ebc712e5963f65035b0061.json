{"ast":null,"code":"var _jsxFileName = \"E:\\\\document\\\\reactjs\\\\delete-multiple\\\\src\\\\ExampleFunctional.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExampleFunctional = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [action, setAction] = useState('');\n  useEffect(() => {\n    //Trong trường hợp dependencies rỗng useEffect(() => {})\n    //Luôn chạy 1 lần duy nhất khi component được mounted\n    //nếu biến trong state thay đổi thì component sẽ được re-render và useEffect sẽ được chạy lại\n\n    //[] chỉ chạy đúng một lần \n    //state trong component có thay đối cũng không chạy vào hàm useEffect này\n    //dù cho ta có setCount trong trường hợp [] này thì nó cũng sẽ chỉ chạy duy nhất 1 lần khi màn hình được render\n\n    //Trong trường hợp có dependencies useEffect(() => {},[count])\n    //sẽ chạy lần đầu khi màn hình được render và sẽ chỉ chạy nếu biến count thay đổi\n\n    document.title = `You clicked ${count} times`;\n    console.log('useEffect');\n    setTimeout(() => {\n      setCount(100);\n    }, 3000);\n    return () => {\n      console.log('useEffect - count - cleanup');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAction('users'),\n      children: \"Get Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setAction('comments'),\n      children: \"Get Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ExampleFunctional, \"RS8OHnyHpDMknMzzJ2pgWcEXs7Y=\");\n_c = ExampleFunctional;\nexport default ExampleFunctional;\nvar _c;\n$RefreshReg$(_c, \"ExampleFunctional\");","map":{"version":3,"names":["React","useState","useEffect","ExampleFunctional","count","setCount","action","setAction","document","title","console","log","setTimeout"],"sources":["E:/document/reactjs/delete-multiple/src/ExampleFunctional.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ExampleFunctional = () => {\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [action, setAction] = useState('');\r\n\r\n    useEffect(() => {\r\n        //Trong trường hợp dependencies rỗng useEffect(() => {})\r\n        //Luôn chạy 1 lần duy nhất khi component được mounted\r\n        //nếu biến trong state thay đổi thì component sẽ được re-render và useEffect sẽ được chạy lại\r\n\r\n        //[] chỉ chạy đúng một lần \r\n        //state trong component có thay đối cũng không chạy vào hàm useEffect này\r\n        //dù cho ta có setCount trong trường hợp [] này thì nó cũng sẽ chỉ chạy duy nhất 1 lần khi màn hình được render\r\n\r\n        //Trong trường hợp có dependencies useEffect(() => {},[count])\r\n        //sẽ chạy lần đầu khi màn hình được render và sẽ chỉ chạy nếu biến count thay đổi\r\n\r\n\r\n        document.title = `You clicked ${count} times`\r\n        console.log('useEffect');\r\n\r\n        setTimeout(() => {\r\n            setCount(100);\r\n        }, 3000)\r\n\r\n        return () => {\r\n            console.log('useEffect - count - cleanup');\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <p>You clicked {count} times</p>\r\n            <button onClick={() => setCount(count + 1)}>Click me</button>\r\n            <button onClick={() => setAction('users')}>Get Users</button>\r\n            <button onClick={() => setAction('comments')}>Get Comments</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExampleFunctional;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,iBAAiB,GAAG,MAAM;EAAA;EAE5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;;IAGAM,QAAQ,CAACC,KAAK,GAAI,eAAcL,KAAM,QAAO;IAC7CM,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAExBC,UAAU,CAAC,MAAM;MACbP,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACTK,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,wBACI;MAAA,WAAG,cAAY,EAACP,KAAK,EAAC,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eAChC;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7D;MAAQ,OAAO,EAAE,MAAMG,SAAS,CAAC,OAAO,CAAE;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7D;MAAQ,OAAO,EAAE,MAAMA,SAAS,CAAC,UAAU,CAAE;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACjE;AAEd,CAAC;AAAA,GAtCKJ,iBAAiB;AAAA,KAAjBA,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}